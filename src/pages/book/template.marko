<i18n-var/>
<script marko-init>
  const addDays = require('date-fns/add_days');
  const subDays = require('date-fns/sub_days');
  const isTodayOrTheFuture = require('../../utils/is-today-or-the-future');
</script>
<var errors=(data.errors || false)
  values=(data.values || false)
  prev=subDays(data.date, 1)
  next=addDays(data.date, 1)/>

<layout-use("../../common/layout.marko")>

  <layout-put into="page-title">
    <i18n-message key="book:title" floor-plate="${data.room.location.name}"
      room-name="${data.room.name}"/> -
    <i18n-message key="app:serviceName"/>
  </layout-put>

  <layout-put into="content">

    <a href="/choose-a-room" class="link-back">
      <i18n-message key="choose:heading"/>
    </a>

    <notify-success if(data.bookingId) message=i18n('book:roomBooked')>
      <form method="post">
        <input type="hidden" name="unbook" value="true"/>
        <input type="hidden" name="bookingId" value=data.bookingId/>
        <button class="button" type="submit">
          <i18n-message key="book:undo"/>
        </button>
      </form>
    </notify-success>
    <notify-success else-if(data.unbooked) message=i18n('book:roomUnbooked')/>

    <h1 class="heading-xlarge no-margin-bottom">
      <span class="heading-secondary">
        ${data.room.location.name}
      </span>
      ${data.room.name}
    </h1>

    <p>
      <i18n-message key="book:features" strong-start="<strong>"
        strong-end="</strong>" features=data.room.features.map(e => e.description).join(', ')/>
    </p>

    <div class="grid-row">
      <div class="column-two-thirds">
        <form class="change-date">
          <gov-date-input name="date" legend=i18n('book:dateForm.date.legend')
            value-day=values.dateDay value-month=values.dateMonth
            value-year=values.dateYear maxyear="9999"
            error=errors.date suffix="camel"/>

          <button type="submit" class="button">
            <i18n-message key="book:dateForm.submit"/>
          </button>
        </form>

        <calendar-view bookings=data.room.bookings date=data.date/>

        <pagination prev-url="?dateDay=${prev.getDate()}&dateMonth=${prev.getMonth() + 1}&dateYear=${prev.getFullYear()}"
          next-url="?dateDay=${next.getDate()}&dateMonth=${next.getMonth() + 1}&dateYear=${next.getFullYear()}"
          prev-text=i18n('date:dayMonth', {day: prev.getDate(), month: prev.getMonth()})
          next-text=i18n('date:dayMonth', {day: next.getDate(), month: next.getMonth()})/>
      </div>

      <div class="column-third" if(isTodayOrTheFuture(data.date))>
        <form method="post">
          <h2 class="heading-medium">
            <i18n-message key="book:bookForm.heading" room-name="${data.room.name}"/>
          </h2>
          <p class="lede">
            <i18n-message key="date:dayMonthYear"
              day=data.date.getDate()
              month=data.date.getMonth()
              year=data.date.getFullYear()/>
          </p>

          <gov-input name="description" label=i18n('book:bookForm.description.label')
            error=errors.description value=values.description/>
          <gov-input name="name" label=i18n('book:bookForm.name.label')
            error=errors.name value=values.name/>
          <gov-input name="email" label=i18n('book:bookForm.email.label')
            error=errors.email value=values.email/>

          <time-select legend=i18n('book:bookForm.from.legend') name="from"
            error=errors.from value-hours=values.fromHours value-minutes=values.fromMinutes/>
          <time-select legend=i18n('book:bookForm.until.legend') name="until"
            error=errors.until value-hours=values.untilHours value-minutes=values.untilMinutes/>

          <button type="submit" class="button">
            <i18n-message key="book:bookForm.submit"/>
          </button>
        </form>
      </div>
    </div>

  </layout-put>

</layout-use>
